% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/texpress.R
\name{TExpress}
\alias{TExpress}
\title{TExpress}
\usage{
TExpress(endpoint = "http://localhost:9090/texpress", input,
  inputFile = FALSE, inputFileFormat = NULL, outputFile = NULL,
  outputFormat = "json", pattern, bundle = NULL, options = NULL)
}
\arguments{
\item{endpoint}{A string specifying the IP and API endpoint of TERMite.
Defaults to "http://localhost:9090/texpress" representing a typical
installation.}

\item{input}{A string representing either text to be processed with TERMite
or an absolute filepath to the file to be processed.}

\item{inputFile}{A boolean, with TRUE indicating that \code{input} should be
considered a filepath. Defaults to \code{FALSE}.}

\item{inputFileFormat}{A string representing the format of the file to be
processed. Requires that \code{file} be \code{TRUE}. Defaults to
\code{NULL}}

\item{outputFile}{A string representing the absolute filepath where output
will be written. Defaults to \code{NULL}, output will be written to
terminal.}

\item{outputFormat}{A string representing the desired format of output.
Defaults to "json".}

\item{pattern}{A string representing a valid TExpress pattern. If
\code{NULL}, user must supply a bundle to be used.}

\item{bundle}{A string representing the bundle to be used, Please ensure that
this bunndle is loaded on the server which you are calling.
Defaults to \code{NULL}, no bundle will be used.}

\item{options}{A named list enumerating the runtime options to be used. Names
correspond to valid TERMite options and values correspond to valid option
settings.}
}
\description{
\code{TExpress} passes user-specified information to a TExpress API endpoint.
Operation of this function requires a valid license to TExpress provided by
SciBite.
}
\examples{
# Pattern Example
texpressResponse <- TExpress(endpoint = "http://localhost:9090/texpress",
                             input = "macrophage colony stimulating factor heart attack elbow",
                             inputFile = FALSE,
                             inputFileFormat = NULL,
                             outputFile = NULL,
                             outputFormat = "json",
                             pattern = ":(GENE)",
                             options = list("subsume" = "false", "rejectAmbig" = "true"))
}
